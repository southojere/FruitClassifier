# -*- coding: utf-8 -*-
"""imageclassifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1phRmGrbWf_ShluoL97ATqV5K2iVNBFW7
"""

import pandas as pd
import numpy as np
# Importing the Keras libraries and packages
from keras.models import Sequential
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense
from keras.preprocessing.image import ImageDataGenerator
# from google.colab import files
# files.upload()
from google.colab import drive
drive.mount('/content/drive')

validation_files = "data/Validation_data"
training_files = "data/Training_data"

classifier = Sequential()
#first step: adding Concolution step
classifier.add(Conv2D(32,(3,3),input_shape = (300,300,3),activation='relu'))

#step 2: adding pooling layer
classifier.add(MaxPooling2D(pool_size = (2,2)))

#step 3: flatterning 
classifier.add(Flatten())

#step 4: create our fully connected layer =>acting as our input layer
# classifier.add(Dense(units = 128,activation='relu'))

#init our output layer, containing 3 nodes for each different class
classifier.add(Dense(units =3 ,activation='relu'))

#Done building our CNN, Compile it.
classifier.compile(optimizer='adam',loss = 'binary_crossentropy',metrics = ['accuracy'])

#begin preprocessing 

#create tensor images
train_datagen = ImageDataGenerator()

test_datagen = ImageDataGenerator()

path_to_test = validation_files
test_set = test_datagen.flow_from_directory(path_to_test,
target_size = (300, 300),
batch_size = 32,
class_mode = 'categorical')
path_to_training =training_files 
training_set = train_datagen.flow_from_directory(path_to_training,
target_size = (300, 300),
batch_size = 32,
class_mode = 'categorical')


classifier.fit_generator(training_set,
                             steps_per_epoch=14,  # number of images in Train_data
                             epochs=25,
                             validation_data=test_set,
                             validation_steps=14  # number in test i think
                             )

